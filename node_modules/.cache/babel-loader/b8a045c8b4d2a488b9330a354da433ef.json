{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/antho/Desktop/prueba/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/antho/Desktop/prueba/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/Users/antho/Desktop/prueba/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/antho/Desktop/prueba/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from\"react\";import Song from\"./components/Song\";import Player from\"./components/Player\";import\"./css/styles.css\";import data from\"./data\";import Library from\"./components/Library\";import Nav from\"./components/Nav\";import Time from\"./components/Time\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Musica=function Musica(){var _useState=useState(0.5),_useState2=_slicedToArray(_useState,2),volume=_useState2[0],setVolume=_useState2[1];var _useState3=useState(data()),_useState4=_slicedToArray(_useState3,2),songs=_useState4[0],setSongs=_useState4[1];var _useState5=useState(songs[0]),_useState6=_slicedToArray(_useState5,2),currentSong=_useState6[0],setCurrentSong=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isPlaying=_useState8[0],setIsPlaying=_useState8[1];var _useState9=useState({currentTime:0,duration:0,animationPercentage:0}),_useState10=_slicedToArray(_useState9,2),songInfo=_useState10[0],setSongInfo=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),libraryStatus=_useState12[0],setLibraryStatus=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),timeStatus=_useState14[0],setTimeStatus=_useState14[1];var timeUpdateHandler=function timeUpdateHandler(e){var current=e.target.currentTime;var duration=e.target.duration;var roundedCurrent=Math.round(current);var roundedDuration=Math.round(duration);var animation=Math.round(roundedCurrent/roundedDuration*100);setSongInfo(_objectSpread(_objectSpread({},songInfo),{},{currentTime:current,duration:duration,animationPercentage:animation}));};var audioRef=useRef(null);var songEndHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentIndex;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentIndex=songs.findIndex(function(song){return song.id===currentSong.id;});_context.next=3;return setCurrentSong(songs[(currentIndex+1)%songs.length]);case 3:if(isPlaying)audioRef.current.play();case 4:case\"end\":return _context.stop();}}},_callee);}));return function songEndHandler(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(libraryStatus?\"library-active\":\"\",\" \").concat(timeStatus?\"timer-active\":\"\"),children:[/*#__PURE__*/_jsx(Nav,{libraryStatus:libraryStatus,setLibraryStatus:setLibraryStatus,timeStatus:timeStatus,setTimeStatus:setTimeStatus}),/*#__PURE__*/_jsx(Song,{currentSong:currentSong}),/*#__PURE__*/_jsx(Player,{audioRef:audioRef,setIsPlaying:setIsPlaying,isPlaying:isPlaying,currentSong:currentSong,setSongInfo:setSongInfo,songInfo:songInfo,songs:songs,setCurrentSong:setCurrentSong,setSongs:setSongs,volume:volume,setVolume:setVolume}),/*#__PURE__*/_jsx(Time,{timeStatus:timeStatus}),/*#__PURE__*/_jsx(Library,{audioRef:audioRef,songs:songs,setCurrentSong:setCurrentSong,isPlaying:isPlaying,setSongs:setSongs,libraryStatus:libraryStatus}),/*#__PURE__*/_jsx(\"audio\",{onTimeUpdate:timeUpdateHandler,onLoadedMetadata:timeUpdateHandler,ref:audioRef,src:currentSong.audio,onEnded:songEndHandler})]});};export default Musica;","map":{"version":3,"sources":["C:/Users/antho/Desktop/prueba/src/components/pages/Musica.js"],"names":["React","useState","useRef","Song","Player","data","Library","Nav","Time","Musica","volume","setVolume","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","currentTime","duration","animationPercentage","songInfo","setSongInfo","libraryStatus","setLibraryStatus","timeStatus","setTimeStatus","timeUpdateHandler","e","current","target","roundedCurrent","Math","round","roundedDuration","animation","audioRef","songEndHandler","currentIndex","findIndex","song","id","length","play","audio"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Song from \"./components/Song\";\r\nimport Player from \"./components/Player\";\r\nimport \"./css/styles.css\";\r\nimport data from \"./data\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\nimport Time from \"./components/Time\";\r\n\r\nconst Musica = () => {\r\n  const [volume, setVolume] = useState(0.5);\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n  const [timeStatus, setTimeStatus] = useState(false);\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\r\n\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: current,\r\n      duration,\r\n      animationPercentage: animation,\r\n    });\r\n  };\r\n  const audioRef = useRef(null);\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div\r\n      className={`App ${libraryStatus ? \"library-active\" : \"\"} ${\r\n        timeStatus ? \"timer-active\" : \"\"\r\n      }`}\r\n    >\r\n      <Nav\r\n        libraryStatus={libraryStatus}\r\n        setLibraryStatus={setLibraryStatus}\r\n        timeStatus={timeStatus}\r\n        setTimeStatus={setTimeStatus}\r\n      />\r\n      <Song currentSong={currentSong} />\r\n      <Player\r\n        audioRef={audioRef}\r\n        setIsPlaying={setIsPlaying}\r\n        isPlaying={isPlaying}\r\n        currentSong={currentSong}\r\n        setSongInfo={setSongInfo}\r\n        songInfo={songInfo}\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        setSongs={setSongs}\r\n        volume={volume}\r\n        setVolume={setVolume}\r\n      />\r\n      <Time timeStatus={timeStatus} />\r\n      <Library\r\n        audioRef={audioRef}\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        isPlaying={isPlaying}\r\n        setSongs={setSongs}\r\n        libraryStatus={libraryStatus}\r\n      />\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onEnded={songEndHandler}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Musica;\r\n"]},"metadata":{},"sourceType":"module"}