{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\Desktop\\\\prueba\\\\src\\\\components\\\\pages\\\\components\\\\Player.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause, faVolumeUp, faVolumeDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Player({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n  volume,\n  setVolume\n}) {\n  const activeLibraryHandler = nexPrev => {\n    const newSongs = songs.map(song => {\n      if (song.id === nexPrev.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  }; //Referance html tag\n\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = async direaction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direaction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    if (direaction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`\n  };\n\n  const volumeChangeHandler = e => {\n    setVolume(e.target.value);\n    audioRef.current.volume = volume;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]} )`\n        },\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          min: 0,\n          max: songInfo.duration || 0,\n          value: songInfo.currentTime,\n          type: \"range\",\n          onChange: dragHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackAnim,\n          className: \"animate-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.duration ? getTime(songInfo.duration) : \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      size: \"2x\",\n      icon: volume >= 0.5 ? faVolumeUp : faVolumeDown,\n      style: {\n        color: \"gray\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: 1,\n      value: volume,\n      onChange: volumeChangeHandler,\n      step: 0.01,\n      className: \"volumeInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-back\"),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-forward\"),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/antho/Desktop/prueba/src/components/pages/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","faVolumeUp","faVolumeDown","Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","volume","setVolume","activeLibraryHandler","nexPrev","newSongs","map","song","id","active","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direaction","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","volumeChangeHandler","background","color","duration"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n  faVolumeUp,\r\n  faVolumeDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Player({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n  volume,\r\n  setVolume,\r\n}) {\r\n  const activeLibraryHandler = (nexPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nexPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n  //Referance html tag\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  const skipTrackHandler = async (direaction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direaction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direaction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  const volumeChangeHandler = (e) => {\r\n    setVolume(e.target.value);\r\n    audioRef.current.volume = volume;\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]} )`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n            onChange={dragHandler}\r\n          />\r\n\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        size=\"2x\"\r\n        icon={volume >= 0.5 ? faVolumeUp : faVolumeDown}\r\n        style={{ color: \"gray\" }}\r\n      />\r\n      <input\r\n        type=\"range\"\r\n        min={0}\r\n        max={1}\r\n        value={volume}\r\n        onChange={volumeChangeHandler}\r\n        step={0.01}\r\n        className=\"volumeInput\"\r\n      />\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}