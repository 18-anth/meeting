{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\Desktop\\\\prueba\\\\src\\\\components\\\\pages\\\\components\\\\Library.js\";\nimport React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Library({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `library ${libraryStatus ? \"active-library\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-songs\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(LibrarySong, {\n        songs: songs,\n        setCurrentSong: setCurrentSong,\n        song: song,\n        id: song.id,\n        audioRef: audioRef,\n        isPlaying: isPlaying,\n        setSongs: setSongs\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Library;\nexport default Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["C:/Users/antho/Desktop/prueba/src/components/pages/components/Library.js"],"names":["React","LibrarySong","Library","songs","setCurrentSong","audioRef","isPlaying","setSongs","libraryStatus","map","song","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,OAAT,CAAiB;AACfC,EAAAA,KADe;AAEfC,EAAAA,cAFe;AAGfC,EAAAA,QAHe;AAIfC,EAAAA,SAJe;AAKfC,EAAAA,QALe;AAMfC,EAAAA;AANe,CAAjB,EAOG;AACD,sBACE;AAAK,IAAA,SAAS,EAAG,WAAUA,aAAa,GAAG,gBAAH,GAAsB,EAAG,EAAjE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT,QAAC,WAAD;AACE,QAAA,KAAK,EAAEP,KADT;AAEE,QAAA,cAAc,EAAEC,cAFlB;AAGE,QAAA,IAAI,EAAEM,IAHR;AAIE,QAAA,EAAE,EAAEA,IAAI,CAACC,EAJX;AAME,QAAA,QAAQ,EAAEN,QANZ;AAOE,QAAA,SAAS,EAAEC,SAPb;AAQE,QAAA,QAAQ,EAAEC;AARZ,SAKOG,IAAI,CAACC,EALZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KA3BQT,O;AA6BT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nfunction Library({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n"]},"metadata":{},"sourceType":"module"}